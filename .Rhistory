setwd("C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/R WORKINGDIRECTORY")
library(datasets)
data(iris)
?iris
row.names(iris)
iris
iris[Sepal.Sength]
iris[,Sepal.Sength]
iris[,Sepal.Length]
iris[,1]
means(iris[,1])
mean(iris[,1])
iris
apply(iris,2,mean)
iris
colMeans(x,Sepal.Length)
colMeans(iris,Sepal.Length)
colMeans(iris,iris(Sepal.Length)
names(iris)
lapply (iris,mean)
apply (iris,2,mean)
apply (iris,"Data.Length",mean)
apply (iris,"Data.Length",mean)
names(iris)
apply (iris,"Sepal.Length",mean)
apply (iris("Sepal.Length"),mean)
iris$Sepal.Length
iris
iris [c("Data.Length","Species"]
iris [c("Data.Length","Species")]
names(iris)
iris [c("Sepal.Length","Species")]
iris$Species == "Virginica"
iris$Species == "virginica"
iris$Species == "virginica"
iris$Sepal.Length
iris[,Sepal.Length]
iris[,"Sepal.Length"]
iris[,"Sepal.Length"]$iris$Species == "virginica"
L = iris$Species == "Virginica"
iris[,L]$"Sepal.Length"
iris[,L]
L
L = iris$Species == "virginica"
iris[,L]
iris[L,]
iris[L,]$"Sepal.Length"
means(iris[iris$Species=="virginica",]$"Sepal.Length")
mean(iris[iris$Species=="virginica",]$"Sepal.Length")
View(iris)
apply(iris[, 1:4], 1, mean)
apply(iris[, 1:4], 2, mean)
colMeans(iris)
data(mtcars)
?mtcars
mtcars
View(mtcars)
split(mtcars, mtcars$cyl)
tapply(mtcars$mpg, mtcars$cyl, mean)
tapply(mtcars$hp, mtcars$cyl, mean)
t <-tapply(mtcars$hp, mtcars$cyl, mean)
t
di <- t[1,1]-t[1,3]
t[1,1]
srt(t)
t
t$4
srt(t)
debug(ls)
ls
ls
q
ls
q
Q
Ã±s
ls
Q
undebug(ls)
ls
ls -latr
ls
ls
setwd("C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2")
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$getminverse()
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix$getminverse()
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/R WORKINGDIRECTORY/corr.R')
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix$getminverse()
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix$getminverse()
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$getminverse()
data <- makeCacheMatrix(matrix1)
cacheSolve(data)
set.seed(77)
m <- matrix(sample.int(100,size=9,replace=TRUE), nrow=3)
m
d <- makeCacheMatrix(m)
cacheSolve(d)
set.seed(77)
m <- matrix(sample.int(100,size=16,replace=TRUE), nrow=4)
d <- makeCacheMatrix(m)
cacheSolve(d)
set.seed(77)
m <- matrix(sample.int(100,size=10000,replace=TRUE), nrow=100)
d <- makeCacheMatrix(m)
system.time(cacheSolve(d))
system.time(cacheSolve(d))
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
m1
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$getminverse()
amatrix
amatrix
source('C:/Users/ElTeRRy/Desktop/COURSERA/DATA SCIENCE/ProgrammingAssignment2/cachematrix.R')
